plugins {
    id 'java'
    id 'io.quarkus'
    id "io.freefair.lombok" version "8.10.2"
    id 'org.jetbrains.kotlin.jvm'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation("io.quarkus:quarkus-smallrye-openapi")
    implementation 'io.quarkus:quarkus-config-yaml'
    implementation 'io.quarkus:quarkus-cache'
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-rest'
    implementation 'io.quarkus:quarkus-rest-jackson'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-rest-client-jackson'
    // cache
    implementation 'io.quarkus:quarkus-cache'
    implementation 'io.quarkus:quarkus-redis-cache'
    implementation 'io.quarkus:quarkus-redis-client'
    // implementation 'org.redisson:redisson-quarkus-30-cache:3.33.0'
    // messaging
    implementation 'io.quarkus:quarkus-messaging-kafka'
    implementation 'io.quarkus:quarkus-kafka-client'
    // orm
    implementation 'io.quarkus:quarkus-hibernate-orm'
    implementation 'io.quarkus:quarkus-hibernate-validator'
    implementation 'io.quarkus:quarkus-jdbc-postgresql'
    implementation 'io.quarkus:quarkus-hibernate-envers'
    implementation 'io.quarkus:quarkus-hibernate-orm-panache'
    implementation 'org.postgresql:postgresql'
    //
    implementation 'org.mapstruct:mapstruct:1.6.2'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.2'
    //
    compileOnly 'org.projectlombok:lombok'
    //
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.quarkus:quarkus-junit5-mockito'
    testImplementation 'io.rest-assured:rest-assured'
    testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.6.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

group 'com.example.demo'
version '1.0.0-SNAPSHOT'

java {
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}
compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}
kotlin {
    jvmToolchain(21)
}
