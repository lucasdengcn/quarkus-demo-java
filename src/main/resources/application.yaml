quarkus:
  devservices:
    enabled: false
  # OAS
  swagger-ui:
    always-include: true
  # logging
  log:
    level: INFO
    category:
      org.hibernate:
        level: DEBUG
  # datasource
  datasource:
    devservices:
      enabled: false
    db-kind: postgresql
    jdbc:
      url: jdbc:postgresql://localhost:15432/postgres?currentSchema=demo-service&autoReconnect=true&serverTimezone=UTC&characterEncoding=utf-8&allowMultiQueries=true&stringtype=unspecified
    username: postgres
    password: pgdev01
  # orm
  hibernate-orm:
    statistics: true
    physical-naming-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    metrics:
      enabled: true
    validation:
      enabled: true
    database:
      generation: none
    flush:
      mode: auto
  # redis
  redis:
    hosts: redis://localhost:6379/0
    timeout: 5s
  # cache
  cache:
    type: redis
    redis:
      expire-after-write: 300s
      orders-cache:
        prefix: orders
        value-type: com.example.demo.model.Order
      posts-cache:
        prefix: posts
        value-type: com.example.demo.integration.model.FakePost
  # REST Client
  rest-client:
    logging:
      scope: request-response
      body-limit: 50
    fake-post-client:
      url: https://jsonplaceholder.typicode.com
      scope: jakarta.inject.Singleton

# kafka
kafka:
  bootstrap:
    servers: localhost:39192
# messaging
mp:
  messaging:
    connector:
      smallrye-kafka:
        client-id-prefix: orders
        group:
          id: orders
        enable:
          auto:
            commit: true
        auto:
          offset:
            reset: latest
    incoming:
      ordersIn:
        connector: smallrye-kafka
        topic: order_create
        value:
          deserializer: com.example.demo.messaging.serde.OrderMessageDeserializer
    outgoing:
      ordersOut:
        connector: smallrye-kafka
        topic: order_create
        value:
          serializer: io.quarkus.kafka.client.serialization.ObjectMapperSerializer